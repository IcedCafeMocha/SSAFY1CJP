
강점  
- 시스템: 강력한 로그인 보안 및 검증 시스템
	게시글 및 댓글에 이미지 첨부 가능
	게시글에 댓글 및 추천 시스템을 이용해 자유로운 활동 가능

- 사이트 컨텐츠 측면: 사용자의 이용을 유도할 매력적인 이벤트와 정보 제공
		   출석, bmi 계산 등 사용자 정보를 이용한 맞춤 서비스 제공
		   추천 식단 제공




팀원 소개 
기능별 or 백/프론트 등 (메인/서브도 가능. 근데 디테일한 게 낫다!) 
하지만 면접에 사용하기 위해 모든 기능 내가 개발한 것 처럼 다 알아야 함.
-> 핵심 키워드 (핵심 기능 소개) (사용 기술 소개)
-> 시연 사진들과 소개
마지막에 개발 후기 + 감사인사 페이지
--------------------------------------------------------------------------------------------------------------------------------------------------

게시글 작성자 아이디 클릭 시 modal로 해당 사용자 프로필 출력.
-> 왜 팝업이 아니라 모달을 사용해? ( modal vs popup ) : 
    - 모달을 사용하면 팝업 차단 등 브라우저 환경에 영향을 받을 수 있는 팝업의 한계를 극복 가능.
    - 뷰포트(viewport) 안에 콘텐츠를 중앙에 위치시키고, 배경이 흐리게 처리되어 보다 강하게 집중시킬 수 있다.
    - 팝업은 현재 창을 벗어난 새 창으로 나타나지만, 모달은 현재 창인 뷰포트(viewport) 안에 나타난다. 팝업은 주로 짧은 정보를 표시하고, 모달은 주로 입력 양식이나 추가 정보를 제공하는 데 사용한다. 팝업은 브라우저의 팝업 차단 기능에 영향을 받고, 모달은 해당 기능에 영향을 받지 않는다.

---------------------------------------------------------------------------------------------------------------------------------------------------------

애초에 간결한 메인 페이지 만들어서 거기서 로그인 해야 입장 가능하게? 
(장점 : 간결한 첫 페이지로 보기 좋음) (단점 : 폐쇄적. 신규 회원 수 감소)
=> 간결한 메인 페이지 but 로그인 시 제공받을 수 있는 이점들을 아래 표기해두면 어떨까?
=> 아직 게시글이나 컨텐츠가 부족한 초기에 이점이 될 수 있음

---------------------------------------------------------------------------------------------------------------------------------------------------------

요구사항 정의서 (기능 명세서) -> 노션 이용

유즈케이스 다이어그램
클래스 다이어그램
화면 설계서

테이블 구조도 (ERD) -> 시간 되면 https://www.erdcloud.com/ 이용, 아니면 gpt 활용






----- 추가 개발 사항 -----

- 관리자만 가능하게끔 할 기능들. 
=> 모든 글 삭제 권한
     공지사항 게시판에 작성 가능
user 어드민 계정 컬럼 필요


- 다크모드
- 찜버튼
=> 찜버튼 만들거면 db 에도 해당 테이블 만들어주고, 프론트에서도 북마크 페이지 구현해야 한다.

- 네이버, 카카오 간편 로그인 api 가져와서 우리 db와 연동

- 주변 헬스장 카카오맵api로 띄우는거 뭔가 있어보임 
     

----- 추가의 추가... -----

- 관리자 페이지 구현.
=> 회원 수 그래프?
     방문자 수
     광고
     신고 대응?

-----------------------------------------------------------------------------------------------------------------------------------------------
db 현재 ssafy_board => final_pjt로 변경함

dto/Board 객체에서 regDate LocalDateTime으로 수정, 현재 시간 들어가도록 함
(application.properties에서 spring.jackson.serialization.write-dates-as-timestamps=false 를 추가해서 
2021-08-01T12:31:02와 같은 형식으로 사용하게 해 줌)

sql 일단은 작성자 컬럼이 아이디를 참조하도록 함 (외래키)
-----------------------------------------------------------------------------------------------------------------------------------------------
※ user 테이블 컬럼 선언
무엇을 PRIMARY KEY로 할 것인가? 
=> id가 같을 수 있지 않나? 그러니 고유값인 email로 지정하면 되는 거 아닌가?
=> 이메일 변경이 불가능해짐... 비교적 길어서 성능에 영향.
=> 그냥 id로 하자!
=> email이 중복되지 않도록 UNIQUE 제약 추가.

